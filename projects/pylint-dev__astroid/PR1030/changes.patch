diff --git a/astroid/__pkginfo__.py b/astroid/__pkginfo__.py
--- a/astroid/__pkginfo__.py
+++ b/astroid/__pkginfo__.py
@@ -24,13 +24,5 @@
 # Licensed under the LGPL: https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html
 # For details: https://github.com/PyCQA/astroid/blob/master/LICENSE
 
-"""astroid packaging information"""
-
-from pkg_resources import DistributionNotFound, get_distribution
-
-try:
-    __version__ = get_distribution("astroid").version
-except DistributionNotFound:
-    __version__ = "2.5.7+"
-
+__version__ = "2.6.0-dev0"
 version = __version__
diff --git a/astroid/helpers.py b/astroid/helpers.py
--- a/astroid/helpers.py
+++ b/astroid/helpers.py
@@ -5,8 +5,8 @@
 # Copyright (c) 2020 Simon Hewitt <si@sjhewitt.co.uk>
 # Copyright (c) 2020 Bryce Guinta <bryce.guinta@protonmail.com>
 # Copyright (c) 2020 Ram Rachum <ram@rachum.com>
-# Copyright (c) 2021 Andrew Haigh <hello@nelf.in>
 # Copyright (c) 2021 Pierre Sassoulas <pierre.sassoulas@gmail.com>
+# Copyright (c) 2021 Andrew Haigh <hello@nelf.in>
 
 # Licensed under the LGPL: https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html
 # For details: https://github.com/PyCQA/astroid/blob/master/LICENSE
diff --git a/astroid/node_classes.py b/astroid/node_classes.py
--- a/astroid/node_classes.py
+++ b/astroid/node_classes.py
@@ -23,9 +23,9 @@
 # Copyright (c) 2019 kavins14 <kavinsingh@hotmail.com>
 # Copyright (c) 2020 Raphael Gaschignard <raphael@rtpg.co>
 # Copyright (c) 2020 Bryce Guinta <bryce.guinta@protonmail.com>
-# Copyright (c) 2021 Andrew Haigh <hello@nelf.in>
-# Copyright (c) 2021 Marc Mueller <30130371+cdce8p@users.noreply.github.com>
 # Copyright (c) 2021 Pierre Sassoulas <pierre.sassoulas@gmail.com>
+# Copyright (c) 2021 Marc Mueller <30130371+cdce8p@users.noreply.github.com>
+# Copyright (c) 2021 Andrew Haigh <hello@nelf.in>
 # Copyright (c) 2021 Federico Bond <federicobond@gmail.com>
 
 # Licensed under the LGPL: https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html
diff --git a/astroid/transforms.py b/astroid/transforms.py
--- a/astroid/transforms.py
+++ b/astroid/transforms.py
@@ -1,8 +1,8 @@
 # Copyright (c) 2015-2016, 2018 Claudiu Popa <pcmanticore@gmail.com>
 # Copyright (c) 2016 Ceridwen <ceridwenv@gmail.com>
 # Copyright (c) 2018 Nick Drozd <nicholasdrozd@gmail.com>
-# Copyright (c) 2021 Andrew Haigh <hello@nelf.in>
 # Copyright (c) 2021 Pierre Sassoulas <pierre.sassoulas@gmail.com>
+# Copyright (c) 2021 Andrew Haigh <hello@nelf.in>
 
 # Licensed under the LGPL: https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html
 # For details: https://github.com/PyCQA/astroid/blob/master/LICENSE
diff --git a/script/bump_changelog.py b/script/bump_changelog.py
new file mode 100644
--- /dev/null
+++ b/script/bump_changelog.py
@@ -0,0 +1,77 @@
+"""
+This script permits to upgrade the changelog in astroid or pylint when releasing a version.
+"""
+import argparse
+from datetime import datetime
+from pathlib import Path
+
+DEFAULT_CHANGELOG_PATH = Path("ChangeLog")
+err = "in the changelog, fix that first!"
+TBA_ERROR_MSG = "More than one release date 'TBA' %s" % err
+NEW_VERSION_ERROR_MSG = "The text for this version '{version}' did not exists %s" % err
+NEXT_VERSION_ERROR_MSG = (
+    "The text for the next version '{version}' already exists %s" % err
+)
+
+TODAY = datetime.now()
+WHATS_NEW_TEXT = "What's New in astroid"
+FULL_WHATS_NEW_TEXT = WHATS_NEW_TEXT + " {version}?"
+RELEASE_DATE_TEXT = "Release Date: TBA"
+NEW_RELEASE_DATE_MESSAGE = "Release Date: {}".format(TODAY.strftime("%Y-%m-%d"))
+
+
+def main() -> None:
+    parser = argparse.ArgumentParser(add_help=__doc__)
+    parser.add_argument("version", help="The version we want to release")
+    args = parser.parse_args()
+    if "dev" not in args.version:
+        version = args.version
+        next_version = get_next_version(version)
+        run(version, next_version)
+
+
+def get_next_version(version: str) -> str:
+    new_version = version.split(".")
+    patch = new_version[2]
+    reminder = None
+    if "-" in patch:
+        patch, reminder = patch.split("-")
+    patch = str(int(patch) + 1)
+    new_version[2] = patch if reminder is None else f"{patch}-{reminder}"
+    return ".".join(new_version)
+
+
+def run(version: str, next_version: str) -> None:
+    with open(DEFAULT_CHANGELOG_PATH) as f:
+        content = f.read()
+    content = transform_content(content, version, next_version)
+    with open(DEFAULT_CHANGELOG_PATH, "w") as f:
+        f.write(content)
+
+
+def transform_content(content: str, version: str, next_version: str) -> str:
+    wn_new_version = FULL_WHATS_NEW_TEXT.format(version=version)
+    wn_next_version = FULL_WHATS_NEW_TEXT.format(version=next_version)
+    # There is only one field where the release date is TBA
+    assert content.count(RELEASE_DATE_TEXT) == 1, TBA_ERROR_MSG
+    # There is already a release note for the version we want to release
+    assert content.count(wn_new_version) == 1, NEW_VERSION_ERROR_MSG.format(
+        version=version
+    )
+    # There is no release notes for the next version
+    assert content.count(wn_next_version) == 0, NEXT_VERSION_ERROR_MSG.format(
+        version=next_version
+    )
+    index = content.find(WHATS_NEW_TEXT)
+    content = content.replace(RELEASE_DATE_TEXT, NEW_RELEASE_DATE_MESSAGE)
+    end_content = content[index:]
+    content = content[:index]
+    content += wn_next_version + "\n"
+    content += "=" * len(wn_next_version) + "\n"
+    content += RELEASE_DATE_TEXT + "\n" * 4
+    content += end_content
+    return content
+
+
+if __name__ == "__main__":
+    main()
diff --git a/setup.py b/setup.py
--- a/setup.py
+++ b/setup.py
@@ -1,3 +1,3 @@
 from setuptools import setup
 
-setup(use_scm_version=True)
+setup()
