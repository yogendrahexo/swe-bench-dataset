diff --git a/test/fixtures/rules/std_rule_cases/L027.yml b/test/fixtures/rules/std_rule_cases/L027.yml
--- a/test/fixtures/rules/std_rule_cases/L027.yml
+++ b/test/fixtures/rules/std_rule_cases/L027.yml
@@ -220,3 +220,40 @@ test_pass_rowtype_with_join:
   configs:
     core:
       dialect: hive
+
+test_fail_column_name_not_found_in_table_aliases_bigquery:
+  # qualified reference should actually exists in table aliases
+  fail_str: |
+    SELECT
+        a.bar,
+        b.foo,
+        this_is.some_struct.id
+    FROM
+        a LEFT JOIN b ON TRUE
+  configs:
+    core:
+      dialect: bigquery
+
+test_pass_column_name_is_a_struct_bigquery:
+  # check structs work as expected
+  pass_str: |
+    SELECT
+        a.bar,
+        b.this_is.some_struct.id
+    FROM
+        a LEFT JOIN b ON TRUE
+  configs:
+    core:
+      dialect: bigquery
+
+test_pass_column_name_from_unnest_bigquery:
+  # Check that we allow an table alias come from UNNEST statement
+  pass_str: |
+    SELECT
+        a.bar,
+        e.foo
+    FROM
+        a LEFT JOIN UNEST(a.events) AS e
+  configs:
+    core:
+      dialect: bigquery
diff --git a/test/rules/std_test.py b/test/rules/std_test.py
--- a/test/rules/std_test.py
+++ b/test/rules/std_test.py
@@ -68,7 +68,7 @@
         ),
         ("L016", "block_comment_errors_2.sql", [(1, 85), (2, 86)]),
         # Column references
-        ("L027", "column_references.sql", [(1, 8)]),
+        ("L027", "column_references.sql", [(1, 8), (1, 11)]),
         ("L027", "column_references_bare_function.sql", []),
         ("L026", "column_references.sql", [(1, 11)]),
         ("L025", "column_references.sql", [(2, 11)]),
