diff --git a/pvlib/forecast.py b/pvlib/forecast.py
--- a/pvlib/forecast.py
+++ b/pvlib/forecast.py
@@ -15,6 +15,7 @@
 from siphon.ncss import NCSS
 
 import warnings
+from pvlib._deprecation import deprecated
 
 
 warnings.warn(
@@ -22,7 +23,15 @@
     'The API may change, the functionality may be consolidated into an io '
     'module, or the module may be separated into its own package.')
 
+_forecast_deprecated = deprecated(
+    since='0.9.1',
+    removal='a future release',
+    addendum='For details, see https://pvlib-python.readthedocs.io/en/stable/user_guide/forecasts.html'  # noqa: E501
+)
 
+# don't decorate the base class to prevent the subclasses from showing
+# duplicate warnings:
+# @_forecast_deprecated
 class ForecastModel:
     """
     An object for querying and holding forecast model information for
@@ -684,6 +693,7 @@ def gust_to_speed(self, data, scaling=1/1.4):
         return wind_speed
 
 
+@_forecast_deprecated
 class GFS(ForecastModel):
     """
     Subclass of the ForecastModel class representing GFS
@@ -785,6 +795,7 @@ def process_data(self, data, cloud_cover='total_clouds', **kwargs):
         return data[self.output_variables]
 
 
+@_forecast_deprecated
 class HRRR_ESRL(ForecastModel):                                 # noqa: N801
     """
     Subclass of the ForecastModel class representing
@@ -875,6 +886,7 @@ def process_data(self, data, cloud_cover='total_clouds', **kwargs):
         return data[self.output_variables]
 
 
+@_forecast_deprecated
 class NAM(ForecastModel):
     """
     Subclass of the ForecastModel class representing NAM
@@ -956,6 +968,7 @@ def process_data(self, data, cloud_cover='total_clouds', **kwargs):
         return data[self.output_variables]
 
 
+@_forecast_deprecated
 class HRRR(ForecastModel):
     """
     Subclass of the ForecastModel class representing HRRR
@@ -1044,6 +1057,7 @@ def process_data(self, data, cloud_cover='total_clouds', **kwargs):
         return data[self.output_variables]
 
 
+@_forecast_deprecated
 class NDFD(ForecastModel):
     """
     Subclass of the ForecastModel class representing NDFD forecast
@@ -1112,6 +1126,7 @@ def process_data(self, data, **kwargs):
         return data[self.output_variables]
 
 
+@_forecast_deprecated
 class RAP(ForecastModel):
     """
     Subclass of the ForecastModel class representing RAP forecast model.
